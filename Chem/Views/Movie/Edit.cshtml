@model Chem.Models.Movie
@using Chem.Models

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Movie</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Desc)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Desc)
            @Html.ValidationMessageFor(model => model.Desc)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Url)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Url)
            @Html.ValidationMessageFor(model => model.Url)
        </div>
        <div class="editor-label">
            <label for="Reagents">Reaction</label>
        </div>
        <div class="editor-field">
            @{
                List<Reaction> reactions = (List<Reaction>)ViewBag.Reactions;
                int selectedId = (int)ViewBag.SelectedReaction;
                var items = reactions
                .Select(item => new SelectListItem()
                { 
                    Text = item.Desc,
                    Value = item.ID.ToString(),
                    Selected = item.ID == selectedId
                });
                
                string s = Html.DropDownList("reaction", items).ToHtmlString();
                string target = " value=\""+selectedId.ToString()+"\"";
                s = s.Replace(target, target + " selected=\"selected\""); 
            }

            @Html.Raw(s)
        </div>



        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
